#Project: Dual Server Video Streaming
#Group: ECE No.9 2012-2013
#Author: James Zhao, Yu-chung Chau, Varoon Wadhawa
#Date: June,2,2013
#Copyright (c) 2013 All Right Reserved

#Description: parsing code used for parsing logs generated by single client codes. 
#Grabs the logs and outputs a text file with columns of time intervals and number of chunks.
#How to run: python timeparse.py <inputLog> <outputLog>

import sys

# Variables #
interval = 1

def parse_args():
        if len(sys.argv) != 3 :
                print 'usage: timeparse.py <inputfile> <ouputfile>'
                sys.exit()
	else:
		inputFile = sys.argv[1]
		outputFile = sys.argv[2]
	return inputFile, outputFile	

def main():
    input, output = parse_args()
    f = open(input, 'r')
    startNum = 0
    currentNum = 0
    numOccur = {}
    for line in f:
        currentNum = float(line)
        testNum = currentNum - startNum
        if testNum <= interval:
            if startNum in numOccur:
                    numOccur[startNum] += 1
            else:
                    numOccur[startNum] = 1
        else: #bigger than interval
            startNum = startNum+interval
            if startNum in numOccur:
                    numOccur[startNum] += 1
            else:
                    numOccur[startNum] = 1
    f.close()

    writeback = open(output, 'w')
    writeback.write('secs\tchunks\n')
    for item in numOccur:
        writeback.write(str(item) + '\t' + str(numOccur[item]) + '\n')
    writeback.close()
        
if __name__== '__main__':
    main()
