#Project: Dual Server Video Streaming
#Group: ECE No.9 2012-2013
#Author: James Zhao, Yu-chung Chau, Varoon Wadhawa
#Date: June,2,2013
#Copyright (c) 2013 All Right Reserved

#Description: parsing code used for parsing the logs generated by the server and dual client codes. 
#Grabs the logs and outputs a text file with columns of time intervals and the number of chunks in that time interval.
#How to run: python BufferTimeParse.py <inputLog> <outputLog>

import sys
from collections import defaultdict

# Variables #
interval = 30

def parse_args():
        if len(sys.argv) != 3 :
                print 'usage: timeparse.py <inputfile> <ouputfile>'
                sys.exit()
	else:
		inputFile = sys.argv[1]
		outputFile = sys.argv[2]
	return inputFile, outputFile	

def main():
	input, output = parse_args()
	f = open(input, 'r')
	currentTime = 0
	listNum = 0
	prevParseTime = 0
	bytesRecvd = defaultdict(int)
	timeRecvd = defaultdict(float)
	for line in f:
		columns = line.split()
		currentTime = float(columns[0])
		if currentTime <= interval + prevParseTime:
			bytesRecvd[listNum] += int(columns[1])
			timeRecvd[listNum] = interval + prevParseTime
			print 'Parse Time: ' + str(prevParseTime)
		else: #bigger than interval
			listNum += 1
			prevParseTime += interval
			bytesRecvd[listNum] = int(columns[1])
			timeRecvd[listNum] = interval + prevParseTime
			print 'New Parse Time: ' + str(prevParseTime)
	f.close()

	writeback = open(output, 'w')
	writeback.write('secs\tchunks\n')
	for item in bytesRecvd:
		writeback.write(str(timeRecvd[item]) + '\t' + str(bytesRecvd[item]) + '\n')
	writeback.close()
		
if __name__== '__main__':
    main()
